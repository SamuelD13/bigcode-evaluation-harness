[["check if there are any two elements in a list of floats `numbers` that are closer than a given threshold `threshold`"], ["split a string of parentheses into groups of matching parentheses"], ["get the fractional part of a number"], ["check if the sum of a list of integers `operations` is less than zero"], ["calculate the mean absolute deviation of a list of numbers"], ["insert a delimeter `delimeter` between each element in list `numbers`"], ["parse nested parentheses in a string `paren_string` into a list of integers, where each integer represents the depth of the parentheses in the string"], ["filter a list of strings `strings` by a substring `substring`"], ["create a function `sum_product` that takes a list of integers `numbers` and returns a tuple containing the sum and product of the elements in the list"], ["get the maximum value in a list of integers `numbers` by iterating over the list and updating the maximum value as we go"], ["check if a string is a palindrome, if not, append the reversed characters of the string to the end of the string to make it a palindrome"], ["create a function `string_xor` that takes two strings `a` and `b` as arguments, and returns a string where each character is the result of the xor operation between"], ["find the longest string in a list of strings `strings`"], ["find the greatest common divisor of two numbers `a` and `b`"], ["get all prefixes of a string `string`"], ["create a string of numbers from 0 to `n` separated by spaces"], ["get the number of distinct characters in a string `string`"], ["parse a string of music notes into a list of integers using a dictionary mapping"], ["find the number of times a substring appears in a string"], ["sort a string of words representing numbers in alphabetical order"], ["find the two closest elements in a list of floats"], ["scale a list of floating point numbers `numbers` to the range [0, 1]"], ["filter a list of integers and non-integers from a list of mixed types `values`"], ["get the length of a string `string`"], ["find the largest divisor of a number `n`"], ["get a list of prime factors of a number `n`"], ["remove duplicates from a list of integers `numbers`"], ["convert a string `string` to lowercase if it's uppercase and vice versa"], ["concatenate a list of strings `strings` into a single string"], ["filter a list of strings `strings` by a prefix `prefix`"], ["get a list of positive numbers from a list `l`"], ["check if a number `n` is prime by checking if it is divisible by any number in the range from 2 to `n - 1`"], ["find the roots of a polynomial with coefficients `xs` using the bisection method"], ["sort every third element in a list `l` in ascending order"], ["remove duplicate values from a list `l`"], ["find the maximum element in a list `l`"], ["create a function `fizz_buzz` that takes an integer `n` as input. It creates a list `ns` containing all numbers from 0 to `n` that are divisible by 11 or 13. It th"], ["sort a list `l` in such a way that all even indexed elements are in ascending order and all odd indexed elements are in descending order"], ["encode and decode string `s` by cycling groups of three characters"], ["generate a list of prime numbers in a fibonacci sequence up to the nth prime number"], ["check if there are three numbers in a list `l` that sum to zero"], ["create a function `car_race_collision` that takes an integer `n` as an argument and returns the square of `n`"], ["increment each element in a list `l` by 1"], ["check if any two numbers in a list `l` sum to zero"], ["convert an integer `x` to a string representation in base `base`"], ["calculate the area of a triangle with base `a` and height `h`"], ["create a function `fib4` that returns the nth value in a sequence of numbers where each number is the sum of the previous four numbers in the sequence. The sequence starts with 0, 0, 2, 0. If n is less than 4, return the nth value in the sequence."], ["find the median of a list `l`"], ["check if a string `text` is a palindrome"], ["calculate the modulus of a number `n` raised to the power of 2 modulo `p`"], ["create two functions `encode_shift` and `decode_shift` to encode and decode a str"], ["remove all vowels from a string `text`"], ["check if all elements in a list `l` are less than a threshold `t`"], ["add two integers `x` and `y`"], ["check if two strings `s0` and `s1` have the same characters"], ["recursive function to calculate the nth fibonacci number"], ["check if a string of brackets is correctly nested"], ["check if a list `l` is sorted in ascending or descending order"], ["get a list of common elements in two lists `l1` and `l2`"], ["find the largest prime factor of a number `n`"], ["sum all numbers from 0 to `n`"], ["check if a string of brackets is correctly nested"], ["get the derivative of a list of numbers `xs`"], ["get the nth number in a sequence where each number is the sum of the previous three numbers"], ["count the number of vowels in a string `s`, including the last character if it is a vowel"], ["shift the digits of a number `x` to the right by `shift` places, if `shift` is greater than the number of digits in `x`, reverse the number"], ["get the sum of the ASCII values of uppercase characters in a string `s`"], ["create a function `fruit_distribution` that takes a string `s` and an integer `n` as parameters. The function splits the string `s` into a list of words, and for each word, if it is a number, append it to a list `lis`. The function then returns the difference between `n` and the sum of the elements in `lis`"], ["get the smallest even number and its index from a list `arr`"], ["find the smallest number in a list `lst` that appears at least as many times as its value"], ["sort a list `lst` in a way that the smallest number is first, then the largest number, then the next smallest, and so on"], ["calculate the area of a triangle using Heron's formula if the sum of the lengths of any two sides is greater than the length of the third side, otherwise return -1"], ["check if a list `q` is a palindrome and the sum of its elements is less than or equal to `w`"], ["find the number of changes needed to make a list `arr` symmetrical"], ["get the list with the smallest sum of lengths of its elements"], ["check if a number `a` is a product of three prime numbers in the range 2 to 100"], ["check if a number `x` is a simple power of another number `n`"], ["check if a number `a` is a perfect cube"], ["create a function `hex_key` that takes a string `num` as input. the function should return the count of characters in `num` that are in a tuple of hexadecimal prime numbers `primes`"], ["convert decimal number `decimal` to binary string"], ["check if a string `s` is a happy string if no three consecutive characters are the same"], ["convert a list of numerical grades into a list of letter grades using a range of values"], ["check if the length of a string is a prime number"], ["create a function `starts_one_ends` that returns 1 if the input is 1, otherwise returns 18 multiplied by 10 to the"], ["convert a number `N` to binary"], ["sum of every second element in a list `lst` that is even"], ["sort the characters in each word of a string `s` in alphabetical order"], ["get a list of tuples `coords` containing the coordinates of each occurrence of value `x` in a 2D list `lst`, sorted by the row index in ascending order and by the column index in descending order"], ["sort an array `array` in ascending order if the sum of the first and last elements of the array is even, otherwise sort in descending order"], ["shift each character in string `s` two positions to the right in the alphabet, wrapping around to the start of the alphabet if necessary"], ["get the second smallest number in a list `lst`"], ["check if the first two words of each sentence in a string `S` are 'I '"], ["check if three integers `x`, `y`, and `z` are in arithmetic progression"], ["convert a string `message` to uppercase, then replace each vowel in the string with the character two positions ahead in the ASCII table, and finally swap the case of the string"], ["find the sum of the digits of the largest prime number in a list `lst`"], ["check if all keys in a dictionary `dict` are either in uppercase or lowercase"], ["create a function `count_up_to` that takes an integer `n` as an argument and returns a list of all prime numbers up to `n`"], ["get the multiplication of the last digit of two numbers"], ["count the number of uppercase vowels in a string `s` in steps of 2"], ["round a float `value` to the nearest integer, but if the float ends with '.5' round up if it's positive and round down if it's negative, and if `value` is an empty string return 0"], ["create a list of `n` elements where each element is the sum of `n` and twice the index of the element"], ["split a string `s` into a list of words using a comma as a delimiter"], ["return the largest even number less than `y` if `x` is greater than `y`, else return `y` minus 1"], ["get the binary representation of the rounded average of two numbers `n` and `m`"], ["get a list of numbers from a list `x` where all the digits of the number are odd"], ["sort a list of numbers `arr` in descending order and replace each number in the list with its word equivalent in a dictionary `dic`"], ["create a list `ret`, for each number `i` in range 1 to `n`, if `i` is even, append the factorial of `i` to `ret`, else append the sum of all numbers from 1 to `i` to `ret`"], ["function `even_odd_palindrome(n)` that counts the number of even and odd palindromes in a range from 1 to `n`"], ["count the number of positive integers in a list `arr` where the sum of the digits of each integer is greater than 0"], ["move one ball in an array to the end of the array if the array is sorted in ascending order"], ["check if the number of odd numbers in list `lst1` is greater than or equal to the number of even numbers in list `lst2`"], ["create a function `histogram` that takes a string `test` as input. The function splits the string into words and stores them in a list `list1`. Then it creates a dictionary `dict1` to store the words and their counts. It iterates over the list `list1` and counts the number of times each word appears in the list. If a word appears more than the previous maximum count and is not an empty string, it updates the maximum cou"], ["delete all occurrences of characters in string `c` from string `s` and check if the resulting string is a palindrome"], ["create a list of strings that describe the number of odd elements in each string in a list of strings"], ["find the smallest subarray sum of a list of integers `nums`"], ["find the sum of the ceil values of the division of the sum of each array in a list of arrays `grid` by a number `capacity`"], ["sort a list of integers `arr` in ascending order based on the number of 1's in their binary representation"], ["get a list of words from a string `s` that contain exactly `n` consonants"], ["get the closest vowel in a word `word` that is not adjacent to other vowels"], ["check if a string `S1` or `S2` is a valid parentheses string by checking if the sum of the parentheses in each string is 0"], ["get the `k` largest elements from a list `arr`"], ["sum all odd numbers at even indices in a list `lst`"], ["sum the first `k` elements of a list `arr` if the length of the string representation of each element is less than or equal to 2"], ["get a list of all odd numbers in the collatz sequence of a given number `n`, sorted in ascending order"], ["check if a string `date` is a valid date in the format of 'mm-dd-yyyy'"], ["split a string `txt` into words if it contains a space, replace commas with spaces and split the string if it contains a comma, and count the number of lowercase letters with an even ascii value in the string `txt` if it does not contain a space or a comma"], ["check if a list `lst` is sorted in ascending order and has no duplicate values"], ["check if the length of the intersection of two intervals `interval1` and `interval2` is a prime number"], ["get the product of the signs of the elements in a list `arr`, and the sum of the absolute values of the elements in the list `arr`"], ["find the minimum value in a grid of numbers `grid` and append it `k` times to a list `ans`. if the index of the value in the list is even, append 1 to the list, else append the minimum value in the grid to the list."], ["create a function `tri` that takes an integer `n` as input. if `n` is 0, return a list containing 1. otherwise, create a list `my_tri` containing 1 and 3. for each integer `i` in the range from 2 to `n`, if `i` is even, append `i / 2 + 1` to `my_tri`. if `i` is odd, append the sum of the last two elements in `my_tri` and `i + 3 / 2` to `my_tri`. finally, return `my_tri`"], ["get the product of all odd digits in a number `n`"], ["check if a string `string` contains at least two nested square brackets"], ["get the sum of squares of each number in a list `lst`, rounding up to the nearest integer using `math.ceil`"], ["check if the last character of a string `txt` is a letter"], ["find the index of the first element in a list `arr` that is smaller than its previous element"], ["get the largest and smallest integers in a list `lst`"], ["compare two values `a` and `b`, if they are strings, replace ',' with '.' in them, convert them to floats, and compare them. If they are equal, return `None`, otherwise return the value of `a` if it is greater than `b`, otherwise return `b`"], ["check if a number `n` is even and greater than or equal to 8"], ["calculate the factorial of a number `n` and multiply it with the factorial of each number from 1 to `n`"], ["replace spaces in a string `text` with \"-\" if the number of consecutive spaces is more than 2, with \"_\" if the number of consecutive spaces is more than 0 and less than or equal to 2"], ["check if a file name is valid by splitting it into two parts by the period, checking if the first part is empty, if the second part is in a list of allowed extensions, and if the first part starts with an alphabet character and contains at most 3 digits"], ["create a function `sum_squares` that takes a list `lst` as an argument. The function should return the sum of the elements in the list `lst`. If the index of the element is divisible by 3, append the square of the element to the list `result`. If the index of the element is divisible by 4 but not by 3, append the cube of the element to the list `result`. Otherwise, append the element itself to the list `result`."], ["get all words in a sentence that are not a single letter and not a multiple of 2 or more letters"], ["check if the decimal representation of two fractions `x` and `n` are equal"], ["sort a list of numbers `nums` by the sum of their digits"], ["filter a list of numbers `nums` to count the number of numbers that start and end with an odd digit"], ["get the number of triples of integers `(A[i],A[j],A[k])` in a list `A` of size `n` such that the sum of the triples is divisible by 3"], ["get a list of planets between two planets `planet1` and `planet2` in the solar system, in alphabetical order"], ["create a function `sorted_list_sum` that takes a list of strings `lst` as input. sort the list `lst` in ascending order. create a new list `new_lst` to store the strings with an even number of characters. iterate over each string `i` in the list `lst`. if the length of the string `i` is even, append it to the list `new_lst`. return the list `new_lst` sorted by the length of the strings"], ["return `x` if `n` is a prime number, else return `y`"], ["sum the squares of all odd numbers in a list `lst` that are greater than 0 and do not contain a decimal point"], ["create a list containing the absolute difference between each corresponding element in two lists `game` and `guess`"], ["Define a function `Strongest_Extension` that takes two parameters `class_name` and `extensions`. The function should return a string that is the concatenation of `class_name` and the extension in `extensions` that has the greatest number of uppercase letters minus the number of lowercase letters."], ["check if string `a` contains a cyclic rotation of string `b`"], ["count the number of even and odd digits in a number `num`"], ["convert an integer to roman numeral"], ["check if three numbers `a`, `b`, and `c` can form a right-angled triangle"], ["find the longest word in a list of words `words` that contains the most unique characters"], ["Define a function `eat` that takes three parameters `number`, `need`, and `remaining`. If `need` is less than or equal to `remaining`, return a list containing the sum of `number` and `need` and the difference of `remaining` and `need`. Otherwise, return a list containing the sum of `number` and `remaining` and 0."], ["Define a function `do_algebra` that takes two lists `operator` and `operand` as arguments. The function should return the result of evaluating a string expression created by concatenating the elements of `operand` and `operator` in the order they appear in the lists."], ["swap the case of all alphabetic characters in a string `s`, reverse the string if no alphabetic characters are found, and return the result"], ["create a function `string_to_md5` that takes a string `text` as input and returns the md5 hash of the string if it is not empty, else return None"], ["generate a list of even integers between two numbers `a` and `b`, but only if the number is between 2 and 8"]]